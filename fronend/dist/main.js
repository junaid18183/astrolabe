(function(t,e){typeof exports=="object"&&typeof module<"u"?e(require("@kinvolk/headlamp-plugin/lib"),require("react/jsx-runtime"),require("@kinvolk/headlamp-plugin/lib/K8s/crd"),require("react-router-dom"),require("@mui/material"),require("@kinvolk/headlamp-plugin/lib/CommonComponents")):typeof define=="function"&&define.amd?define(["@kinvolk/headlamp-plugin/lib","react/jsx-runtime","@kinvolk/headlamp-plugin/lib/K8s/crd","react-router-dom","@mui/material","@kinvolk/headlamp-plugin/lib/CommonComponents"],e):(t=typeof globalThis<"u"?globalThis:t||self,e(t.pluginLib,t.pluginLib.ReactJSX,t.pluginLib.Crd,t.pluginLib.ReactRouter,t.pluginLib.MuiMaterial,t.pluginLib.CommonComponents))})(this,function(t,e,T,k,d,s){"use strict";const A=T.makeCustomResourceClass({apiInfo:[{group:"astrolabe.io",version:"v1"}],isNamespaced:!0,singularName:"Module",pluralName:"modules"});function w(){const[b,v]=A.useList();return v?e.jsxs("div",{children:["Error loading modules: ",v.message]}):b?e.jsx("div",{className:"overflow-x-auto",children:e.jsxs("table",{className:"min-w-full bg-white dark:bg-gray-900 border rounded shadow",children:[e.jsx("thead",{children:e.jsxs("tr",{className:"bg-gray-100 dark:bg-gray-800",children:[e.jsx("th",{className:"px-4 py-2 text-left",children:"Name"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Namespace"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Source Type"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Source URL"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Version"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Status"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Last Synced"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Cluster"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Actions"})]})}),e.jsx("tbody",{children:b.map((c,u)=>{var f,r,S;const{spec:i={},status:a={},metadata:o={}}=c.jsonData||{},l=c.getName?c.getName():(o==null?void 0:o.name)||"-",n=c.getNamespace?c.getNamespace():(o==null?void 0:o.namespace)||"-",N=c._clusterName||"-",p=l!=="-"&&n!=="-"&&N!=="-"?`/c/${N}/astrolabe/modules/${n}/${l}`:void 0;return e.jsxs("tr",{className:"border-b hover:bg-gray-50 dark:hover:bg-gray-800",children:[e.jsx("td",{className:"px-4 py-2",children:p?e.jsx("a",{href:p,className:"text-blue-600 hover:underline",children:l}):e.jsx("span",{children:l})}),e.jsx("td",{className:"px-4 py-2",children:n}),e.jsx("td",{className:"px-4 py-2",children:((f=i.source)==null?void 0:f.type)||"-"}),e.jsx("td",{className:"px-4 py-2",children:((r=i.source)==null?void 0:r.url)||"-"}),e.jsx("td",{className:"px-4 py-2",children:((S=i.source)==null?void 0:S.version)||"-"}),e.jsx("td",{className:"px-4 py-2",children:e.jsxs("span",{className:"inline-flex items-center",children:[e.jsx("span",{className:`h-3 w-3 rounded-full mr-2 ${a.conditions&&a.conditions.some(x=>x.type==="Ready"&&x.status==="True")?"bg-green-500":"bg-gray-400"}`}),a.conditions&&a.conditions.some(x=>x.type==="Ready"&&x.status==="True")?"Ready":"Not Ready"]})}),e.jsx("td",{className:"px-4 py-2",children:a.lastSynced||"-"}),e.jsx("td",{className:"px-4 py-2",children:c._clusterName}),e.jsx("td",{className:"px-4 py-2",children:p?e.jsx("a",{href:p,className:"px-2 py-1 bg-blue-500 text-white rounded hover:bg-blue-600",children:"View"}):e.jsx("span",{children:"-"})})]},u)})})]})}):e.jsx(s.Loader,{})}function L(){var l,n,N,p,f;const{namespace:b,name:v}=k.useParams(),[c,u]=A.useGet(v,b);if(u)return e.jsxs("div",{children:["Error loading module: ",u.message]});if(!c)return e.jsx(s.Loader,{});const{spec:i={},status:a={},metadata:o={}}=c.jsonData||{};return e.jsxs(d.Box,{sx:{bgcolor:r=>r.palette.mode==="dark"?"#18181b":"#f8fafc",borderRadius:2,p:2,boxShadow:1},children:[e.jsx(s.MainInfoSection,{resource:c,title:`Module: ${o.name}`,extraInfo:[{name:"Namespace",value:o.namespace||"-"},{name:"Source Type",value:((l=i.source)==null?void 0:l.type)||"-"},{name:"Source URL",value:((n=i.source)==null?void 0:n.url)||"-"},{name:"Source Path",value:((N=i.source)==null?void 0:N.path)||"-"},{name:"Version",value:((p=i.source)==null?void 0:p.version)||"-"},{name:"Description",value:a.description||"-"},{name:"Last Synced",value:a.lastSynced||"-"}]}),e.jsx(s.SectionBox,{title:"Providers",children:e.jsx(s.NameValueTable,{rows:Array.isArray(a.providers)&&a.providers.length>0?a.providers.map(r=>({name:r.name,value:`${r.source||"-"}${r.version?" @ "+r.version:""}`})):[{name:"No providers",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Inputs",children:e.jsx(s.NameValueTable,{rows:Array.isArray(a.inputs)&&a.inputs.length>0?a.inputs.map(r=>({name:r.name,value:`${r.type}${r.required?" (required)":""}${r.sensitive?" (sensitive)":""}${r.default!==void 0?" (default: "+r.default+")":""}${r.description?" - "+r.description:""}`})):[{name:"No inputs",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Outputs",children:e.jsx(s.NameValueTable,{rows:Array.isArray(a.outputs)&&a.outputs.length>0?a.outputs.map(r=>({name:r.name,value:`${r.type}${r.sensitive?" (sensitive)":""}${r.description?" - "+r.description:""}`})):[{name:"No outputs",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Resources",children:e.jsx(s.NameValueTable,{rows:Array.isArray(a.resources)&&a.resources.length>0?a.resources.map(r=>({name:r.name,value:r.type})):[{name:"No resources",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Submodules",children:e.jsx(s.NameValueTable,{rows:Array.isArray(a.submodules)&&a.submodules.length>0?a.submodules.map(r=>({name:r.name,value:r.source})):[{name:"No submodules",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Requirements",children:e.jsx(s.NameValueTable,{rows:a.requirements?[{name:"Terraform Version",value:((f=a.requirements.terraform)==null?void 0:f.required_version)||"-"},...a.requirements.required_providers?Object.entries(a.requirements.required_providers).map(([r,S])=>({name:`Provider: ${r}`,value:String(S)})):[]]:[{name:"No requirements",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Conditions",children:e.jsx(s.ConditionsTable,{resource:c.jsonData})})]})}const V=T.makeCustomResourceClass({apiInfo:[{group:"astrolabe.io",version:"v1"}],isNamespaced:!0,singularName:"Stack",pluralName:"stacks"});function B(){return e.jsx("div",{children:"Hello Headlamp Stacks!"})}function O(){const{namespace:b,name:v}=k.useParams(),[c,u]=V.useGet(v,b);if(u)return e.jsxs("div",{children:["Error loading stack: ",u.message]});if(!c)return e.jsx("div",{children:"Loading..."});const{spec:i={},status:a={},metadata:o={}}=c.jsonData||{};return e.jsxs(d.Box,{sx:{bgcolor:l=>l.palette.mode==="dark"?"#18181b":"#f8fafc",borderRadius:2,p:2,boxShadow:1},children:[e.jsx(s.MainInfoSection,{resource:c,title:`Stack: ${o.name}`,extraInfo:[{name:"Phase",value:a.phase||"-"},{name:"Status",value:a.status||"-"},{name:"Ready",value:a.ready!==void 0?String(a.ready):"-"},{name:"Summary",value:a.summary||"-"}]}),e.jsx(s.SectionBox,{title:"Backend Config",children:e.jsx(s.NameValueTable,{rows:i.backendConfig?[{name:"Type",value:i.backendConfig.type||"-"},{name:"Settings",value:JSON.stringify(i.backendConfig.settings)||"-"}]:[{name:"No backend config",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Credential Reference",children:e.jsx(s.NameValueTable,{rows:i.credentialRef?[{name:"Name",value:i.credentialRef.name||"-"}]:[{name:"No credential reference",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Modules",children:e.jsx(d.Box,{sx:{overflowX:"auto"},children:e.jsxs(d.Table,{children:[e.jsx(d.TableHead,{children:e.jsxs(d.TableRow,{children:[e.jsx(d.TableCell,{children:"Name"}),e.jsx(d.TableCell,{children:"Depends On"}),e.jsx(d.TableCell,{children:"Variables"})]})}),e.jsx(d.TableBody,{children:Array.isArray(i.modules)&&i.modules.length>0?i.modules.map((l,n)=>e.jsxs(d.TableRow,{children:[e.jsx(d.TableCell,{children:l.name}),e.jsx(d.TableCell,{children:Array.isArray(l.dependsOn)?l.dependsOn.join(", "):"-"}),e.jsx(d.TableCell,{children:l.variables?JSON.stringify(l.variables):"-"})]},n)):e.jsx(d.TableRow,{children:e.jsx(d.TableCell,{colSpan:3,children:"No modules"})})})]})})}),e.jsx(s.SectionBox,{title:"Outputs",children:e.jsx(s.NameValueTable,{rows:a.outputs?Object.entries(a.outputs).map(([l,n])=>({name:l,value:JSON.stringify(n)})):[{name:"No outputs",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Resources",children:e.jsx(s.NameValueTable,{rows:Array.isArray(a.resources)&&a.resources.length>0?a.resources.map(l=>({name:l.name,value:"-"})):[{name:"No resources",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Conditions",children:e.jsx(s.ConditionsTable,{resource:c.jsonData})})]})}const y="astrolabe",h="modules",$="module",g="stacks";t.registerSidebarEntry({parent:null,name:y,label:"Astrolabe",icon:"mdi:cow",url:"/astrolabe"}),t.registerSidebarEntry({parent:y,name:h,label:"Modules",url:"/astrolabe/modules"}),t.registerSidebarEntry({parent:y,name:g,label:"Stacks",url:"/astrolabe/stacks"}),t.registerRoute({path:"/astrolabe/stacks",sidebar:g,name:g,exact:!0,component:B}),t.registerRoute({path:"/astrolabe/stacks/:namespace/:name",sidebar:g,parent:y,name:g,exact:!0,component:O}),t.registerRoute({path:"/astrolabe",sidebar:h,name:h,exact:!0,component:m}),t.registerRoute({path:"/astrolabe/modules",sidebar:h,name:h,exact:!0,component:w}),t.registerRoute({path:"/astrolabe/modules/:namespace/:name",sidebar:h,parent:y,name:$,exact:!0,component:L});function m(){return"Hello Astrolabe!"}console.log("Astrolabe Plugin registered.")});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
