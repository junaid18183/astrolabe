(function(o,e){typeof exports=="object"&&typeof module<"u"?e(require("@kinvolk/headlamp-plugin/lib"),require("react/jsx-runtime"),require("@kinvolk/headlamp-plugin/lib/K8s/crd"),require("react-router-dom"),require("@mui/material"),require("@kinvolk/headlamp-plugin/lib/CommonComponents")):typeof define=="function"&&define.amd?define(["@kinvolk/headlamp-plugin/lib","react/jsx-runtime","@kinvolk/headlamp-plugin/lib/K8s/crd","react-router-dom","@mui/material","@kinvolk/headlamp-plugin/lib/CommonComponents"],e):(o=typeof globalThis<"u"?globalThis:o||self,e(o.pluginLib,o.pluginLib.ReactJSX,o.pluginLib.Crd,o.pluginLib.ReactRouter,o.pluginLib.MuiMaterial,o.pluginLib.CommonComponents))})(this,function(o,e,T,w,i,s){"use strict";const k=T.makeCustomResourceClass({apiInfo:[{group:"astrolabe.io",version:"v1"}],isNamespaced:!0,singularName:"Module",pluralName:"modules"});function L(){const[h,u]=k.useList();return u?e.jsxs("div",{children:["Error loading modules: ",u.message]}):h?e.jsx("div",{className:"overflow-x-auto",children:e.jsxs("table",{className:"min-w-full bg-white dark:bg-gray-900 border rounded shadow",children:[e.jsx("thead",{children:e.jsxs("tr",{className:"bg-gray-100 dark:bg-gray-800",children:[e.jsx("th",{className:"px-4 py-2 text-left",children:"Name"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Namespace"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Source Type"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Source URL"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Version"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Status"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Last Synced"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Cluster"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Actions"})]})}),e.jsx("tbody",{children:h.map((l,b)=>{var N,r,S;const{spec:d={},status:a={},metadata:t={}}=l.jsonData||{},c=l.getName?l.getName():(t==null?void 0:t.name)||"-",n=l.getNamespace?l.getNamespace():(t==null?void 0:t.namespace)||"-",y=l._clusterName||"-",p=c!=="-"&&n!=="-"&&y!=="-"?`/c/${y}/astrolabe/modules/${n}/${c}`:void 0;return e.jsxs("tr",{className:"border-b hover:bg-gray-50 dark:hover:bg-gray-800",children:[e.jsx("td",{className:"px-4 py-2",children:p?e.jsx("a",{href:p,className:"text-blue-600 hover:underline",children:c}):e.jsx("span",{children:c})}),e.jsx("td",{className:"px-4 py-2",children:n}),e.jsx("td",{className:"px-4 py-2",children:((N=d.source)==null?void 0:N.type)||"-"}),e.jsx("td",{className:"px-4 py-2",children:((r=d.source)==null?void 0:r.url)||"-"}),e.jsx("td",{className:"px-4 py-2",children:((S=d.source)==null?void 0:S.version)||"-"}),e.jsx("td",{className:"px-4 py-2",children:e.jsxs("span",{className:"inline-flex items-center",children:[e.jsx("span",{className:`h-3 w-3 rounded-full mr-2 ${a.conditions&&a.conditions.some(g=>g.type==="Ready"&&g.status==="True")?"bg-green-500":"bg-gray-400"}`}),a.conditions&&a.conditions.some(g=>g.type==="Ready"&&g.status==="True")?"Ready":"Not Ready"]})}),e.jsx("td",{className:"px-4 py-2",children:a.lastSynced||"-"}),e.jsx("td",{className:"px-4 py-2",children:l._clusterName}),e.jsx("td",{className:"px-4 py-2",children:p?e.jsx("a",{href:p,className:"px-2 py-1 bg-blue-500 text-white rounded hover:bg-blue-600",children:"View"}):e.jsx("span",{children:"-"})})]},b)})})]})}):e.jsx(s.Loader,{})}function $(){var c,n,y,p,N;const{namespace:h,name:u}=w.useParams(),[l,b]=k.useGet(u,h);if(b)return e.jsxs("div",{children:["Error loading module: ",b.message]});if(!l)return e.jsx(s.Loader,{});const{spec:d={},status:a={},metadata:t={}}=l.jsonData||{};return e.jsxs(i.Box,{sx:{bgcolor:r=>r.palette.mode==="dark"?"#18181b":"#f8fafc",borderRadius:2,p:2,boxShadow:1},children:[e.jsx(s.MainInfoSection,{resource:l,title:`Module: ${t.name}`,extraInfo:[{name:"Namespace",value:t.namespace||"-"},{name:"Source Type",value:((c=d.source)==null?void 0:c.type)||"-"},{name:"Source URL",value:((n=d.source)==null?void 0:n.url)||"-"},{name:"Source Path",value:((y=d.source)==null?void 0:y.path)||"-"},{name:"Version",value:((p=d.source)==null?void 0:p.version)||"-"},{name:"Description",value:a.description||"-"},{name:"Last Synced",value:a.lastSynced||"-"}]}),e.jsx(s.SectionBox,{title:"Providers",children:e.jsx(s.NameValueTable,{rows:Array.isArray(a.providers)&&a.providers.length>0?a.providers.map(r=>({name:r.name,value:`${r.source||"-"}${r.version?" @ "+r.version:""}`})):[{name:"No providers",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Inputs",children:e.jsx(s.NameValueTable,{rows:Array.isArray(a.inputs)&&a.inputs.length>0?a.inputs.map(r=>({name:r.name,value:`${r.type}${r.required?" (required)":""}${r.sensitive?" (sensitive)":""}${r.default!==void 0?" (default: "+r.default+")":""}${r.description?" - "+r.description:""}`})):[{name:"No inputs",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Outputs",children:e.jsx(s.NameValueTable,{rows:Array.isArray(a.outputs)&&a.outputs.length>0?a.outputs.map(r=>({name:r.name,value:`${r.type}${r.sensitive?" (sensitive)":""}${r.description?" - "+r.description:""}`})):[{name:"No outputs",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Resources",children:e.jsx(s.NameValueTable,{rows:Array.isArray(a.resources)&&a.resources.length>0?a.resources.map(r=>({name:r.name,value:r.type})):[{name:"No resources",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Submodules",children:e.jsx(s.NameValueTable,{rows:Array.isArray(a.submodules)&&a.submodules.length>0?a.submodules.map(r=>({name:r.name,value:r.source})):[{name:"No submodules",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Requirements",children:e.jsx(s.NameValueTable,{rows:a.requirements?[{name:"Terraform Version",value:((N=a.requirements.terraform)==null?void 0:N.required_version)||"-"},...a.requirements.required_providers?Object.entries(a.requirements.required_providers).map(([r,S])=>({name:`Provider: ${r}`,value:String(S)})):[]]:[{name:"No requirements",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Conditions",children:e.jsx(s.ConditionsTable,{resource:l.jsonData})})]})}const A=T.makeCustomResourceClass({apiInfo:[{group:"astrolabe.io",version:"v1"}],isNamespaced:!0,singularName:"Stack",pluralName:"stacks"});function V(){const[h,u]=A.useList();return u?e.jsxs("div",{children:["Error loading stacks: ",u.message]}):h?e.jsx("div",{className:"overflow-x-auto",children:e.jsxs("table",{className:"min-w-full bg-white dark:bg-gray-900 border rounded shadow",children:[e.jsx("thead",{children:e.jsxs("tr",{className:"bg-gray-100 dark:bg-gray-800",children:[e.jsx("th",{className:"px-4 py-2 text-left",children:"Name"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Namespace"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Phase"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Status"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Ready"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Age"}),e.jsx("th",{className:"px-4 py-2 text-left",children:"Actions"})]})}),e.jsx("tbody",{children:h.map((l,b)=>{const{spec:d={},status:a={},metadata:t={}}=l.jsonData||{},c=l.getName?l.getName():(t==null?void 0:t.name)||"-",n=l.getNamespace?l.getNamespace():(t==null?void 0:t.namespace)||"-",y=l._clusterName||"-",p=c!=="-"&&n!=="-"&&y!=="-"?`/c/${y}/astrolabe/stacks/${n}/${c}`:void 0;let N="-";if(t.creationTimestamp){const r=new Date(t.creationTimestamp),g=new Date().getTime()-r.getTime(),m=Math.floor(g/(1e3*60*60*24));N=m>0?`${m}d`:`${Math.floor(g/(1e3*60*60))}h`}return e.jsxs("tr",{className:"border-b hover:bg-gray-50 dark:hover:bg-gray-800",children:[e.jsx("td",{className:"px-4 py-2",children:p?e.jsx("a",{href:p,className:"text-blue-600 hover:underline",children:c}):e.jsx("span",{children:c})}),e.jsx("td",{className:"px-4 py-2",children:n}),e.jsx("td",{className:"px-4 py-2",children:a.phase||"-"}),e.jsx("td",{className:"px-4 py-2",children:a.status||"-"}),e.jsx("td",{className:"px-4 py-2",children:e.jsxs("span",{className:"inline-flex items-center",children:[e.jsx("span",{className:`h-3 w-3 rounded-full mr-2 ${a.ready===!0?"bg-green-500":"bg-gray-400"}`}),a.ready===!0?"Ready":"Not Ready"]})}),e.jsx("td",{className:"px-4 py-2",children:N}),e.jsx("td",{className:"px-4 py-2",children:p?e.jsx("a",{href:p,className:"px-2 py-1 bg-blue-500 text-white rounded hover:bg-blue-600",children:"View"}):e.jsx("span",{children:"-"})})]},b)})})]})}):e.jsx("div",{children:"Loading..."})}function B(){const{namespace:h,name:u}=w.useParams(),[l,b]=A.useGet(u,h);if(b)return e.jsxs("div",{children:["Error loading stack: ",b.message]});if(!l)return e.jsx("div",{children:"Loading..."});const{spec:d={},status:a={},metadata:t={}}=l.jsonData||{};return e.jsxs(i.Box,{sx:{bgcolor:c=>c.palette.mode==="dark"?"#18181b":"#f8fafc",borderRadius:2,p:2,boxShadow:1},children:[e.jsx(s.MainInfoSection,{resource:l,title:`Stack: ${t.name}`,extraInfo:[{name:"Phase",value:a.phase||"-"},{name:"Status",value:a.status||"-"},{name:"Ready",value:a.ready!==void 0?String(a.ready):"-"},{name:"Summary",value:a.summary||"-"}]}),e.jsx(s.SectionBox,{title:"Backend Config",children:e.jsx(s.NameValueTable,{rows:d.backendConfig?[{name:"Type",value:d.backendConfig.type||"-"},{name:"Settings",value:JSON.stringify(d.backendConfig.settings)||"-"}]:[{name:"No backend config",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Credential Reference",children:e.jsx(s.NameValueTable,{rows:d.credentialRef?[{name:"Name",value:d.credentialRef.name||"-"}]:[{name:"No credential reference",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Modules",children:e.jsx(i.Box,{sx:{overflowX:"auto"},children:e.jsxs(i.Table,{children:[e.jsx(i.TableHead,{children:e.jsxs(i.TableRow,{children:[e.jsx(i.TableCell,{children:"Name"}),e.jsx(i.TableCell,{children:"Depends On"}),e.jsx(i.TableCell,{children:"Variables"})]})}),e.jsx(i.TableBody,{children:Array.isArray(d.modules)&&d.modules.length>0?d.modules.map((c,n)=>e.jsxs(i.TableRow,{children:[e.jsx(i.TableCell,{children:c.name}),e.jsx(i.TableCell,{children:Array.isArray(c.dependsOn)?c.dependsOn.join(", "):"-"}),e.jsx(i.TableCell,{children:c.variables?JSON.stringify(c.variables):"-"})]},n)):e.jsx(i.TableRow,{children:e.jsx(i.TableCell,{colSpan:3,children:"No modules"})})})]})})}),e.jsx(s.SectionBox,{title:"Outputs",children:e.jsx(s.NameValueTable,{rows:a.outputs?Object.entries(a.outputs).map(([c,n])=>({name:c,value:JSON.stringify(n)})):[{name:"No outputs",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Resources",children:e.jsx(s.NameValueTable,{rows:Array.isArray(a.resources)&&a.resources.length>0?a.resources.map(c=>({name:c.name,value:"-"})):[{name:"No resources",value:"-"}]})}),e.jsx(s.SectionBox,{title:"Conditions",children:e.jsx(s.ConditionsTable,{resource:l.jsonData})})]})}const f="astrolabe",x="modules",O="module",v="stacks";o.registerSidebarEntry({parent:null,name:f,label:"Astrolabe",icon:"mdi:cow",url:"/astrolabe"}),o.registerSidebarEntry({parent:f,name:x,label:"Modules",url:"/astrolabe/modules"}),o.registerSidebarEntry({parent:f,name:v,label:"Stacks",url:"/astrolabe/stacks"}),o.registerRoute({path:"/astrolabe/stacks",sidebar:v,name:v,exact:!0,component:V}),o.registerRoute({path:"/astrolabe/stacks/:namespace/:name",sidebar:v,parent:f,name:v,exact:!0,component:B}),o.registerRoute({path:"/astrolabe",sidebar:x,name:x,exact:!0,component:E}),o.registerRoute({path:"/astrolabe/modules",sidebar:x,name:x,exact:!0,component:L}),o.registerRoute({path:"/astrolabe/modules/:namespace/:name",sidebar:x,parent:f,name:O,exact:!0,component:$});function E(){return"Hello Astrolabe!"}console.log("Astrolabe Plugin registered.")});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
