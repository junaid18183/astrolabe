(function(d,e){typeof exports=="object"&&typeof module<"u"?e(require("@kinvolk/headlamp-plugin/lib"),require("react/jsx-runtime"),require("@kinvolk/headlamp-plugin/lib/K8s/crd"),require("@kinvolk/headlamp-plugin/lib/CommonComponents"),require("react-router-dom"),require("@mui/material")):typeof define=="function"&&define.amd?define(["@kinvolk/headlamp-plugin/lib","react/jsx-runtime","@kinvolk/headlamp-plugin/lib/K8s/crd","@kinvolk/headlamp-plugin/lib/CommonComponents","react-router-dom","@mui/material"],e):(d=typeof globalThis<"u"?globalThis:d||self,e(d.pluginLib,d.pluginLib.ReactJSX,d.pluginLib.Crd,d.pluginLib.CommonComponents,d.pluginLib.ReactRouter,d.pluginLib.MuiMaterial))})(this,function(d,e,k,o,q,i){"use strict";const L=k.makeCustomResourceClass({apiInfo:[{group:"astrolabe.io",version:"v1"}],isNamespaced:!0,singularName:"Module",pluralName:"modules"});function A(){const[t,p]=L.useList();return p?e.jsxs("div",{children:["Error loading modules: ",p.message]}):t?e.jsx("div",{children:t.map((n,v)=>{var c,h,f,S,y;const{spec:a={},status:s={},metadata:T={}}=n.jsonData||{};return e.jsxs("div",{className:"mb-4 p-4 border rounded shadow-sm",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Name:"})," ",n.getName()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Namespace:"})," ",n.getNamespace()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Source Type:"})," ",((c=a.source)==null?void 0:c.type)||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Source URL:"})," ",((h=a.source)==null?void 0:h.url)||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Source Path:"})," ",((f=a.source)==null?void 0:f.path)||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Version:"})," ",((S=a.source)==null?void 0:S.version)||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Description:"})," ",s.description||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Last Synced:"})," ",s.lastSynced||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Cluster Name:"})," ",n._clusterName]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Providers:"}),e.jsx("ul",{children:(s.providers??[]).length>0?s.providers.map((r,l)=>e.jsxs("li",{children:[r.name," (",r.source||"-",") ",r.version?"@ "+r.version:""]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Inputs:"}),e.jsx("ul",{children:(s.inputs??[]).length>0?s.inputs.map((r,l)=>e.jsxs("li",{children:[r.name,": ",r.type,r.required?" (required)":"",r.sensitive?" (sensitive)":"",r.default!==void 0?" (default: "+r.default+")":""," ",r.description?"- "+r.description:""]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Outputs:"}),e.jsx("ul",{children:(s.outputs??[]).length>0?s.outputs.map((r,l)=>e.jsxs("li",{children:[r.name,": ",r.type,r.sensitive?" (sensitive)":"",r.description?" - "+r.description:""]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Resources:"}),e.jsx("ul",{children:(s.resources??[]).length>0?s.resources.map((r,l)=>e.jsxs("li",{children:[r.name,": ",r.type]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Submodules:"}),e.jsx("ul",{children:(s.submodules??[]).length>0?s.submodules.map((r,l)=>e.jsxs("li",{children:[r.name,": ",r.source]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Requirements:"}),e.jsx("ul",{children:s.requirements?e.jsxs(e.Fragment,{children:[e.jsxs("li",{children:["Terraform Version: ",((y=s.requirements.terraform)==null?void 0:y.required_version)||"-"]}),s.requirements.required_providers&&Object.entries(s.requirements.required_providers).map(([r,l],N)=>e.jsxs("li",{children:["Provider: ",r," - ",String(l)]},N))]}):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Conditions:"}),e.jsx("ul",{children:(s.conditions??[]).length>0?s.conditions.map((r,l)=>e.jsxs("li",{children:[r.type,": ",r.status," (",r.reason,")"," ",r.message?"- "+r.message:""]},l)):e.jsx("li",{children:"-"})})]})]},v)})}):e.jsx(o.Loader,{})}function O(){const[t,p]=L.useList();return p?e.jsxs("div",{children:["Error loading modules: ",p.message]}):t?e.jsx("div",{children:t.map((n,v)=>{var c,h,f,S,y;const{spec:a={},status:s={},metadata:T={}}=n.jsonData||{};return e.jsxs("div",{className:"mb-4 p-4 border rounded shadow-sm",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Name:"})," ",n.getName()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Namespace:"})," ",n.getNamespace()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Source Type:"})," ",((c=a.source)==null?void 0:c.type)||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Source URL:"})," ",((h=a.source)==null?void 0:h.url)||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Source Path:"})," ",((f=a.source)==null?void 0:f.path)||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Version:"})," ",((S=a.source)==null?void 0:S.version)||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Description:"})," ",s.description||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Last Synced:"})," ",s.lastSynced||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Cluster Name:"})," ",n._clusterName]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Providers:"}),e.jsx("ul",{children:(s.providers??[]).length>0?s.providers.map((r,l)=>e.jsxs("li",{children:[r.name," (",r.source||"-",") ",r.version?"@ "+r.version:""]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Inputs:"}),e.jsx("ul",{children:(s.inputs??[]).length>0?s.inputs.map((r,l)=>e.jsxs("li",{children:[r.name,": ",r.type,r.required?" (required)":"",r.sensitive?" (sensitive)":"",r.default!==void 0?" (default: "+r.default+")":""," ",r.description?"- "+r.description:""]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Outputs:"}),e.jsx("ul",{children:(s.outputs??[]).length>0?s.outputs.map((r,l)=>e.jsxs("li",{children:[r.name,": ",r.type,r.sensitive?" (sensitive)":"",r.description?" - "+r.description:""]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Resources:"}),e.jsx("ul",{children:(s.resources??[]).length>0?s.resources.map((r,l)=>e.jsxs("li",{children:[r.name,": ",r.type]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Submodules:"}),e.jsx("ul",{children:(s.submodules??[]).length>0?s.submodules.map((r,l)=>e.jsxs("li",{children:[r.name,": ",r.source]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Requirements:"}),e.jsx("ul",{children:s.requirements?e.jsxs(e.Fragment,{children:[e.jsxs("li",{children:["Terraform Version: ",((y=s.requirements.terraform)==null?void 0:y.required_version)||"-"]}),s.requirements.required_providers&&Object.entries(s.requirements.required_providers).map(([r,l],N)=>e.jsxs("li",{children:["Provider: ",r," - ",String(l)]},N))]}):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Conditions:"}),e.jsx("ul",{children:(s.conditions??[]).length>0?s.conditions.map((r,l)=>e.jsxs("li",{children:[r.type,": ",r.status," (",r.reason,")"," ",r.message?"- "+r.message:""]},l)):e.jsx("li",{children:"-"})})]})]},v)})}):e.jsx(o.Loader,{})}const x=k.makeCustomResourceClass({apiInfo:[{group:"astrolabe.io",version:"v1"}],isNamespaced:!0,singularName:"Stack",pluralName:"stacks"});function _(){return e.jsx("div",{children:"Hello Headlamp Stacks!"})}function V(){const{namespace:t,name:p}=q.useParams(),[n,v]=x.useGet(p,t);if(v)return e.jsxs("div",{children:["Error loading stack: ",v.message]});if(!n)return e.jsx("div",{children:"Loading..."});const{spec:a={},status:s={},metadata:T={}}=n.jsonData||{};return e.jsxs(i.Box,{sx:{bgcolor:c=>c.palette.mode==="dark"?"#18181b":"#f8fafc",borderRadius:2,p:2,boxShadow:1},children:[e.jsx(o.MainInfoSection,{resource:n,title:`Stack: ${T.name}`,extraInfo:[{name:"Phase",value:s.phase||"-"},{name:"Status",value:s.status||"-"},{name:"Ready",value:s.ready!==void 0?String(s.ready):"-"},{name:"Summary",value:s.summary||"-"}]}),e.jsx(o.SectionBox,{title:"Backend Config",children:e.jsx(o.NameValueTable,{rows:a.backendConfig?[{name:"Type",value:a.backendConfig.type||"-"},{name:"Settings",value:JSON.stringify(a.backendConfig.settings)||"-"}]:[{name:"No backend config",value:"-"}]})}),e.jsx(o.SectionBox,{title:"Credential Reference",children:e.jsx(o.NameValueTable,{rows:a.credentialRef?[{name:"Name",value:a.credentialRef.name||"-"}]:[{name:"No credential reference",value:"-"}]})}),e.jsx(o.SectionBox,{title:"Modules",children:e.jsx(i.Box,{sx:{overflowX:"auto"},children:e.jsxs(i.Table,{children:[e.jsx(i.TableHead,{children:e.jsxs(i.TableRow,{children:[e.jsx(i.TableCell,{children:"Name"}),e.jsx(i.TableCell,{children:"Depends On"}),e.jsx(i.TableCell,{children:"Variables"})]})}),e.jsx(i.TableBody,{children:Array.isArray(a.modules)&&a.modules.length>0?a.modules.map((c,h)=>e.jsxs(i.TableRow,{children:[e.jsx(i.TableCell,{children:c.name}),e.jsx(i.TableCell,{children:Array.isArray(c.dependsOn)?c.dependsOn.join(", "):"-"}),e.jsx(i.TableCell,{children:c.variables?JSON.stringify(c.variables):"-"})]},h)):e.jsx(i.TableRow,{children:e.jsx(i.TableCell,{colSpan:3,children:"No modules"})})})]})})}),e.jsx(o.SectionBox,{title:"Outputs",children:e.jsx(o.NameValueTable,{rows:s.outputs?Object.entries(s.outputs).map(([c,h])=>({name:c,value:JSON.stringify(h)})):[{name:"No outputs",value:"-"}]})}),e.jsx(o.SectionBox,{title:"Resources",children:e.jsx(o.NameValueTable,{rows:Array.isArray(s.resources)&&s.resources.length>0?s.resources.map(c=>({name:c.name,value:"-"})):[{name:"No resources",value:"-"}]})}),e.jsx(o.SectionBox,{title:"Conditions",children:e.jsx(o.ConditionsTable,{resource:n.jsonData})})]})}const b="astrolabe",g="modules",w="module",u="stacks";d.registerSidebarEntry({parent:null,name:b,label:"Astrolabe",icon:"mdi:cow",url:"/astrolabe"}),d.registerSidebarEntry({parent:b,name:g,label:"Modules",url:"/astrolabe/modules"}),d.registerSidebarEntry({parent:b,name:u,label:"Stacks",url:"/astrolabe/stacks"}),d.registerRoute({path:"/astrolabe/stacks",sidebar:u,name:u,exact:!0,component:_}),d.registerRoute({path:"/astrolabe/stacks/:namespace/:name",sidebar:u,parent:b,name:u,exact:!0,component:V}),d.registerRoute({path:"/astrolabe",sidebar:g,name:g,exact:!0,component:E}),d.registerRoute({path:"/astrolabe/modules",sidebar:g,name:g,exact:!0,component:A}),d.registerRoute({path:"/astrolabe/modules/:namespace/:name",sidebar:g,parent:b,name:w,exact:!0,component:O});function E(){return"Hello Astrolabe!"}console.log("Astrolabe Plugin registered.")});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
