(function(l,r){typeof exports=="object"&&typeof module<"u"?r(require("@kinvolk/headlamp-plugin/lib"),require("react/jsx-runtime"),require("@kinvolk/headlamp-plugin/lib/K8s/crd"),require("@kinvolk/headlamp-plugin/lib/CommonComponents")):typeof define=="function"&&define.amd?define(["@kinvolk/headlamp-plugin/lib","react/jsx-runtime","@kinvolk/headlamp-plugin/lib/K8s/crd","@kinvolk/headlamp-plugin/lib/CommonComponents"],r):(l=typeof globalThis<"u"?globalThis:l||self,r(l.pluginLib,l.pluginLib.ReactJSX,l.pluginLib.Crd,l.pluginLib.CommonComponents))})(this,function(l,r,g,s){"use strict";const y=g.makeCustomResourceClass({apiInfo:[{group:"astrolabe.io",version:"v1"}],isNamespaced:!0,singularName:"Module",pluralName:"modules"});function A(){return"Hello Headlamp!"}function T(){var d,c,v,b;const{namespace:h,name:S}=useParams(),[i,n]=y.useGet(S,h);if(n)return r.jsxs("div",{children:["Error loading module: ",n.message]});if(!i)return r.jsx("div",{children:"Loading..."});const{spec:t={},status:a={},metadata:f={}}=i.jsonData||{};return r.jsxs(Box,{sx:{bgcolor:e=>e.palette.mode==="dark"?"#18181b":"#f8fafc",borderRadius:2,p:2,boxShadow:1},children:[r.jsx(s.MainInfoSection,{resource:i,title:`Module: ${f.name}`,extraInfo:[{name:"Source Type",value:((d=t.source)==null?void 0:d.type)||"-"},{name:"Source URL",value:((c=t.source)==null?void 0:c.url)||"-"},{name:"Version",value:((v=t.source)==null?void 0:v.version)||"-"}]}),r.jsx(s.SectionBox,{title:"Providers",children:r.jsx(s.NameValueTable,{rows:Array.isArray(a.providers)&&a.providers.length>0?a.providers.map(e=>({name:e.name,value:`${e.source||"-"}${e.version?" @ "+e.version:""}`})):[{name:"No providers",value:"-"}]})}),r.jsx(s.SectionBox,{title:"Inputs",children:r.jsx(s.NameValueTable,{rows:Array.isArray(a.inputs)&&a.inputs.length>0?a.inputs.map(e=>({name:e.name,value:`${e.type}${e.required?" (required)":""}${e.sensitive?" (sensitive)":""}${e.default!==void 0?" (default: "+e.default+")":""}`})):[{name:"No inputs",value:"-"}]})}),r.jsx(s.SectionBox,{title:"Outputs",children:r.jsx(s.NameValueTable,{rows:Array.isArray(a.outputs)&&a.outputs.length>0?a.outputs.map(e=>({name:e.name,value:`${e.type}${e.sensitive?" (sensitive)":""}${e.description?" - "+e.description:""}`})):[{name:"No outputs",value:"-"}]})}),r.jsx(s.SectionBox,{title:"Resources",children:r.jsx(s.NameValueTable,{rows:Array.isArray(a.resources)&&a.resources.length>0?a.resources.map(e=>({name:e.name,value:e.type})):[{name:"No resources",value:"-"}]})}),r.jsx(s.SectionBox,{title:"Submodules",children:r.jsx(s.NameValueTable,{rows:Array.isArray(a.submodules)&&a.submodules.length>0?a.submodules.map(e=>({name:e.name,value:e.source})):[{name:"No submodules",value:"-"}]})}),r.jsx(s.SectionBox,{title:"Requirements",children:r.jsx(s.NameValueTable,{rows:a.requirements?[{name:"Terraform Version",value:((b=a.requirements.terraform)==null?void 0:b.required_version)||"-"},...Object.entries(a.requirements.required_providers||{}).map(([e,m])=>({name:`Provider: ${e}`,value:m}))]:[{name:"No requirements",value:"-"}]})}),r.jsx(s.SectionBox,{title:"Conditions",children:r.jsx(s.ConditionsTable,{resource:i.jsonData})})]})}const x=g.makeCustomResourceClass({apiInfo:[{group:"astrolabe.io",version:"v1"}],isNamespaced:!0,singularName:"Module",pluralName:"modules"});function N(){return"Hello Headlamp!"}function $(){var d,c,v,b;const{namespace:h,name:S}=useParams(),[i,n]=x.useGet(S,h);if(n)return r.jsxs("div",{children:["Error loading module: ",n.message]});if(!i)return r.jsx("div",{children:"Loading..."});const{spec:t={},status:a={},metadata:f={}}=i.jsonData||{};return r.jsxs(Box,{sx:{bgcolor:e=>e.palette.mode==="dark"?"#18181b":"#f8fafc",borderRadius:2,p:2,boxShadow:1},children:[r.jsx(s.MainInfoSection,{resource:i,title:`Module: ${f.name}`,extraInfo:[{name:"Source Type",value:((d=t.source)==null?void 0:d.type)||"-"},{name:"Source URL",value:((c=t.source)==null?void 0:c.url)||"-"},{name:"Version",value:((v=t.source)==null?void 0:v.version)||"-"}]}),r.jsx(s.SectionBox,{title:"Providers",children:r.jsx(s.NameValueTable,{rows:Array.isArray(a.providers)&&a.providers.length>0?a.providers.map(e=>({name:e.name,value:`${e.source||"-"}${e.version?" @ "+e.version:""}`})):[{name:"No providers",value:"-"}]})}),r.jsx(s.SectionBox,{title:"Inputs",children:r.jsx(s.NameValueTable,{rows:Array.isArray(a.inputs)&&a.inputs.length>0?a.inputs.map(e=>({name:e.name,value:`${e.type}${e.required?" (required)":""}${e.sensitive?" (sensitive)":""}${e.default!==void 0?" (default: "+e.default+")":""}`})):[{name:"No inputs",value:"-"}]})}),r.jsx(s.SectionBox,{title:"Outputs",children:r.jsx(s.NameValueTable,{rows:Array.isArray(a.outputs)&&a.outputs.length>0?a.outputs.map(e=>({name:e.name,value:`${e.type}${e.sensitive?" (sensitive)":""}${e.description?" - "+e.description:""}`})):[{name:"No outputs",value:"-"}]})}),r.jsx(s.SectionBox,{title:"Resources",children:r.jsx(s.NameValueTable,{rows:Array.isArray(a.resources)&&a.resources.length>0?a.resources.map(e=>({name:e.name,value:e.type})):[{name:"No resources",value:"-"}]})}),r.jsx(s.SectionBox,{title:"Submodules",children:r.jsx(s.NameValueTable,{rows:Array.isArray(a.submodules)&&a.submodules.length>0?a.submodules.map(e=>({name:e.name,value:e.source})):[{name:"No submodules",value:"-"}]})}),r.jsx(s.SectionBox,{title:"Requirements",children:r.jsx(s.NameValueTable,{rows:a.requirements?[{name:"Terraform Version",value:((b=a.requirements.terraform)==null?void 0:b.required_version)||"-"},...Object.entries(a.requirements.required_providers||{}).map(([e,m])=>({name:`Provider: ${e}`,value:m}))]:[{name:"No requirements",value:"-"}]})}),r.jsx(s.SectionBox,{title:"Conditions",children:r.jsx(s.ConditionsTable,{resource:i.jsonData})})]})}const u="astrolabe",p="modules",V="module",o="stacks";l.registerSidebarEntry({parent:null,name:u,label:"Astrolabe",icon:"mdi:cow"}),l.registerSidebarEntry({parent:u,name:p,label:"Modules",url:"/astrolabe/modules"}),l.registerSidebarEntry({parent:u,name:o,label:"Stacks",url:"/astrolabe/stacks"}),l.registerRoute({path:"/astrolabe/stacks",sidebar:o,name:o,exact:!0,component:N}),l.registerRoute({path:"/astrolabe/stacks/:namespace/:name",sidebar:o,parent:u,name:o,exact:!0,component:$}),l.registerRoute({path:"/astrolabe/modules",sidebar:p,name:p,exact:!0,component:A}),l.registerRoute({path:"/astrolabe/modules/:namespace/:name",sidebar:p,parent:u,name:V,exact:!0,component:T}),console.log("Astrolabe Plugin registered.")});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
