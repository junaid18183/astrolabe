(function(i,e){typeof exports=="object"&&typeof module<"u"?e(require("@kinvolk/headlamp-plugin/lib"),require("react/jsx-runtime"),require("@kinvolk/headlamp-plugin/lib/K8s/crd"),require("@kinvolk/headlamp-plugin/lib/CommonComponents")):typeof define=="function"&&define.amd?define(["@kinvolk/headlamp-plugin/lib","react/jsx-runtime","@kinvolk/headlamp-plugin/lib/K8s/crd","@kinvolk/headlamp-plugin/lib/CommonComponents"],e):(i=typeof globalThis<"u"?globalThis:i||self,e(i.pluginLib,i.pluginLib.ReactJSX,i.pluginLib.Crd,i.pluginLib.CommonComponents))})(this,function(i,e,u,f){"use strict";const S=u.makeCustomResourceClass({apiInfo:[{group:"astrolabe.io",version:"v1"}],isNamespaced:!0,singularName:"Module",pluralName:"modules"});function q(){const[a,h]=S.useList();return h?e.jsxs("div",{children:["Error loading modules: ",h.message]}):a?e.jsx("div",{children:a.map((d,k)=>{var p,t,g,v,b;const{spec:o={},status:s={},metadata:m={}}=d.jsonData||{};return e.jsxs("div",{className:"mb-4 p-4 border rounded shadow-sm",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Name:"})," ",d.getName()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Namespace:"})," ",d.getNamespace()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Source Type:"})," ",((p=o.source)==null?void 0:p.type)||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Source URL:"})," ",((t=o.source)==null?void 0:t.url)||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Source Path:"})," ",((g=o.source)==null?void 0:g.path)||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Version:"})," ",((v=o.source)==null?void 0:v.version)||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Description:"})," ",s.description||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Last Synced:"})," ",s.lastSynced||"-"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Cluster Name:"})," ",d._clusterName]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Providers:"}),e.jsx("ul",{children:(s.providers??[]).length>0?s.providers.map((r,l)=>e.jsxs("li",{children:[r.name," (",r.source||"-",") ",r.version?"@ "+r.version:""]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Inputs:"}),e.jsx("ul",{children:(s.inputs??[]).length>0?s.inputs.map((r,l)=>e.jsxs("li",{children:[r.name,": ",r.type,r.required?" (required)":"",r.sensitive?" (sensitive)":"",r.default!==void 0?" (default: "+r.default+")":""," ",r.description?"- "+r.description:""]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Outputs:"}),e.jsx("ul",{children:(s.outputs??[]).length>0?s.outputs.map((r,l)=>e.jsxs("li",{children:[r.name,": ",r.type,r.sensitive?" (sensitive)":"",r.description?" - "+r.description:""]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Resources:"}),e.jsx("ul",{children:(s.resources??[]).length>0?s.resources.map((r,l)=>e.jsxs("li",{children:[r.name,": ",r.type]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Submodules:"}),e.jsx("ul",{children:(s.submodules??[]).length>0?s.submodules.map((r,l)=>e.jsxs("li",{children:[r.name,": ",r.source]},l)):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Requirements:"}),e.jsx("ul",{children:s.requirements?e.jsxs(e.Fragment,{children:[e.jsxs("li",{children:["Terraform Version: ",((b=s.requirements.terraform)==null?void 0:b.required_version)||"-"]}),s.requirements.required_providers&&Object.entries(s.requirements.required_providers).map(([r,l],L)=>e.jsxs("li",{children:["Provider: ",r," - ",String(l)]},L))]}):e.jsx("li",{children:"-"})})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Conditions:"}),e.jsx("ul",{children:(s.conditions??[]).length>0?s.conditions.map((r,l)=>e.jsxs("li",{children:[r.type,": ",r.status," (",r.reason,") ",r.message?"- "+r.message:""]},l)):e.jsx("li",{children:"-"})})]})]},k)})}):e.jsx(f.Loader,{})}const c="astrolabe",n="modules";i.registerSidebarEntry({parent:null,name:c,label:"Astrolabe",icon:"mdi:cow"}),i.registerSidebarEntry({parent:c,name:n,label:"Modules",url:"/astrolabe/modules"}),i.registerRoute({path:"/astrolabe/modules",sidebar:n,name:n,exact:!0,component:q}),console.log("Astrolabe Plugin registered.")});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
